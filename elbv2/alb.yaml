Parameters:
  ALBName:
    Type: String
    Description: "The name for the application load balancer"

  ALBScheme:
    Type: String
    Description: "Scheme of the ALB"
    AllowedValues:
      - "internal"
      - "internet-facing"

  ALBAccessLogEnable:
    Type: String
    Description: "Whether enable access log or not"
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  ALBAccessLogBucket:
    Type: String
    Description: "Bucket name where logs are stored. Bucket policy must allow putObject for logging"
    Default: "bucket-name"

  TargetGroupName:
    Type: String
    Description: "The name for the target group"

  TargetType:
    Type: String
    Description: "The target group type. Instance or IP"
    AllowedValues:
      - "instance"
      - "ip"

  TargetPort:
    Type: String
    Description: "The port of the target"
    Default: 80

  HealthCheckPath:
    Type: String
    Description: "Target group health check path"
    Default: "/"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "The vpc id for application load balancer"

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "The subnet ids for application load balancer"

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: "The security group ids for application load balancer"

  Project:
    Type: String
    Description: "The project name for provisioned this resources"
    Default: wsi

  Owner:
    Type: String
    Description: "The team name for owned this resources"
    Default: hmoon

Conditions:
  EnableALBAccessLog: !Equals [!Ref ALBAccessLogEnable, "true"]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Tag configuration"
        Parameters:
          - Project
          - Owner
      - Label:
          default: "ALB Configuration"
        Parameters:
          - ALBName
          - ALBScheme
          - TargetGroupName
          - TargetType
          - TargetPort
          - HealthCheckPath
          - ALBAccessLogEnable
          - ALBAccessLogBucket
      - Label:
          default: "ALB Network Configuration"
        Parameters:
          - VpcId
          - SubnetIds
          - SecurityGroupIds
Resources:
  #
  # ELBv2 - Target Group
  #
  TargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Ref TargetGroupName
      TargetType: !Ref TargetType
      IpAddressType: ipv4
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Port: !Ref TargetPort
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 10
      VpcId: !Ref VpcId
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckPort: !Ref TargetPort
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 10
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

  #
  # ELBv2 - Internet-facing ALB
  #
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref ALBName
      Type: application
      Scheme: !Ref ALBScheme
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: routing.http2.enabled
          Value: true
        - Key: access_logs.s3.enabled
          Value: !Ref ALBAccessLogEnable
        - !If
          - EnableALBAccessLog
          - Key: access_logs.s3.bucket
            Value: !Ref ALBAccessLogBucket
          - !Ref "AWS::NoValue"
      Subnets: !Ref SubnetIds
      SecurityGroups: !Ref SecurityGroupIds
      Tags:
        - Key: Project
          Value: !Ref Project
        - Key: Owner
          Value: !Ref Owner

  #
  # ELBv2 - Listener
  #
  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: "Content not found"
            StatusCode: "404"
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ListenerRule1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ApplicationLoadBalancerListener
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /*
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup1
      Priority: 1

  # ListenerRule2:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     ListenerArn: !Ref ApplicationLoadBalancerListener
  #     Conditions:
  #       - Field: path-pattern
  #         PathPatternConfig:
  #           Values:
  #             - /health
  #             - /healthcheck
  #     Actions:
  #       - Type: fixed-response
  #         FixedResponseConfig:
  #           ContentType: text/plain
  #           MessageBody: "Content not found"
  #           StatusCode: "404"
  #     Priority: 2
